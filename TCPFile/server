#include "serverwidget.h"
#include "ui_serverwidget.h"
#include <QFileDialog>
#include <QFileInfo>
#include <QDebug>
#include <QMessageBox>



ServerWidget::ServerWidget(QWidget *parent)
    : QWidget(parent)
    , ui(new Ui::ServerWidget)
{
    ui->setupUi(this);

    //监听套接字
    tcpServer = new QTcpServer(this);

    //监听
    tcpServer->listen(QHostAddress::Any,8888);
    setWindowTitle(QStringLiteral("服务器端口为：8888"));

    //设置两个按钮都不能按
    ui->buttonFile->setEnabled(false);
    ui->buttonSend->setEnabled(false);

    //如果客户端成功和服务器连接
    //tcpServer会自动触发 newConnection()
    connect(tcpServer,&QTcpServer::newConnection,[=](){

        //取出建立好连接的套接字
        tcpSocket = tcpServer->nextPendingConnection();
        //获取对方的ip和端口
        QString ip = tcpSocket->peerAddress().toString();
        quint16 port = tcpSocket->peerPort();

        QString str = QString(QStringLiteral("[%1:%2] 成功连接")).arg(ip).arg(port);
        ui->textEdit->setText((str));


        //成功链接才能选择文件
        ui->buttonFile->setEnabled(true);

        connect(tcpSocket,&QTcpSocket::readyRead,[=](){

            //取客户端的信息
            QByteArray buf = tcpSocket->readAll();
            if(QString(buf) == "file done")
            {
                  qDebug()<<"222233333333333333333333333333333333333333333333333333333333";
                ui->textEdit->append(QStringLiteral("文件发送完毕222"));
                file.close();


            }
        });




    });
    connect(&timer,&QTimer::timeout,[=](){
        //关闭定时器
        timer.stop();
        //发送文件
        sendData();
    });


}

ServerWidget::~ServerWidget()
{
    delete ui;
}


void ServerWidget::on_buttonFile_clicked()
{
    QString filepath= QFileDialog::getOpenFileName(this,"open","../");

    if(false==filepath.isEmpty())
    {
        fileName.clear();
        fileSize=0;

        //获取文件信息
        QFileInfo info(filepath);
        fileName=info.fileName();
        fileSize=info.size();

        sendSize = 0;   //发送文件的大小

        //只读方式打开文件
        //指定文件的名字
        file.setFileName(filepath);

        //打开文件
        bool isOk = file.open(QIODevice::ReadOnly);
        if(false==isOk)
        {
            qDebug()<<"打开文件失败！";
        }

        //提示打开文件的路径
        ui->textEdit->append(filepath);
        qDebug()<<"name"<<fileName<<"filesie"<<fileSize;
        ui->buttonFile->setEnabled(false);
        ui->buttonSend->setEnabled(true);

    }
    else{
        qDebug()<<" 选择文件路径出错 ";
    }
}

void ServerWidget::on_buttonSend_clicked()
{

    //先发送文件头信息      文件名##文件大小
    QString head = QString(QStringLiteral("%1##%2")).arg(fileName).arg(fileSize);
    qDebug()<<"name1"<<fileName<<"filesie111"<<fileSize;
//    QString str =QString(QStringLiteral("接收的文件:[%1:%2kb]")).arg(fileName).arg(fileSize/1024);
//    QMessageBox::information(this,QStringLiteral("文件信息"),str);
    ui->textEdit->append(QStringLiteral("正在发送文件……"));

    //发送头部信息
    qint64 len = tcpSocket->write(head.toUtf8());

    if(len>0)   //头部信息发送成功
    {
          //发送真正的文件信息
          //防止TCP黏包文件
          //需要通过定时器延时 20 ms
        timer.start(20);

    }
    else{
        qDebug()<<"头部信息发送失败 110";
        file.close();
        ui->buttonFile->setEnabled(true);
        ui->buttonSend->setEnabled(false);

        tcpSocket->disconnectFromHost();
        tcpSocket->close();
    }

}
void ServerWidget::sendData()
{
    qint64 len =0;
    do
    {
        //每次发送数据的大小
        char buf[4*1024]={0};
        len=0;

        //往文件中读数据
        len = file.read(buf,sizeof(buf));
        //发送数据，读多少，发多少
        len = tcpSocket->write(buf,len);


        //发送的数据需要累积
        sendSize += len;

    }while(len>0);

    //是否发送文件完毕
    if(sendSize == fileSize)
    {

        file.close();

        //断开客户端端口
//        tcpSocket->disconnectFromHost();
//        tcpSocket->close();

        ui->buttonFile->setEnabled(true);
        ui->buttonSend->setEnabled(false);

    }

}

void ServerWidget::on_buttonClose_clicked()
{
    //断开客户端端口
        tcpSocket->disconnectFromHost();
        tcpSocket->close();
        ui->buttonFile->setEnabled(false);
      //  ui->buttonClose->setEnabled(false);
        ui->textEdit->append(QStringLiteral("服务器断开连接！"));
        
}
